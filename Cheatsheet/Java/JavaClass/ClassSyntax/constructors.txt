✦•┈๑⋅⋯ CONSTRUCTORS ⋯⋅๑┈•✦
    public class MyClass {
      
      // Constructor Overloading - Multiple Constructors for a Java Class
      // Constructors (No-arg constructor)
      public MyClass() {
      }
      
      // Constructors
      public MyClass(String name, int number) {
        this.name = name;
        this.number = number;
      }

      public MyClass(String name) {
        // Calling a Constructor from a Constructor
        this(name, -1);
      }
    }

  [ Default: No-arg Constructor ]
      - You don't have to define a constructor for a class.
      - If you don't define any constructor, the Java compiler will insert a default, no-argument constructor for you.

  [ Calling a Constructor ]
      MyClass myClassVar = new MyClass();
      MyClass myClassVar = new MyClass(1975);

  [ Calling a Constructor from a Constructor ]
      ... 
      public MyClass(String name) {
        // Calling a Constructor from a Constructor
        this(name, -1);
      }
      ...

  [ Calling Constructors in Superclasses ]
          public class Vehicle {
            private String regNo = null;

            public Vehicle(String no) {
                this.regNo = no;
            }
          }

          public class Car extends Vehicle {
              private String brand = null;

              public Car(String br, String no) {
                  super(no);
                  this.brand = br;
              }
          }

      [ '''super(no)''' is calling constructors in superclasses ]
